#!/usr/bin/env bash

# lookup an ip
function sip() {
  # ip138不直接支持ipv6
  # 使用[[ 和 =~ 进行模式匹配，检查字符串是否包含冒号
  if [[ $1 =~ : ]]; then
    open https://www.ipshudi.com/$1.htm
  else
    open https://www.ip138.com/iplookup.php?ip=$1
  fi
}

# random password
function rndpwd() {
    openssl rand -base64 32
}

# git
function gspp() {
    not_clean=$(if [ -n "$(git status --porcelain)" ]; then echo true; else echo false; fi)
    dt=$(date '+%Y-%m-%d_%H:%M:%S')
    if [ $not_clean = true ] ; then
        git stash push -u -m "$dt"
    fi
    git pull --rebase
    if [ $not_clean = true ] ; then
        git stash pop
    fi
    git add -A
    git reset
}

# npm rush register
function npm_reg() {
  # ~/d is the directory where i develop
  cd ~/d
  mkd "$1"
  npm init -y
  # version `0.0.0` instead of `1.0.0`
  cat package.json | \
    js -to 'x.version = `0.0.0`, JSON.stringify(x, null, 2)+`\n`'  \
    > package.json
  npm publish
}

# short for imagemin
function imgmin() {
  imagemin $1 --out-dir .
}

# prepend text to file
# https://unix.stackexchange.com/questions/56975/whats-the-command-to-prepend-a-line-to-a-file
function prepend() {
  local text=$2
  local file=$1
  local tmpfile="$file.prepend.tmp"
  (echo $text; cat $file) > $tmpfile; mv $tmpfile $file
}

export PATH=$PATH:$HOME/bin
alias k=kanban

# proxy
function proxy_on() {
  export https_proxy=http://127.0.0.1:8118 http_proxy=http://127.0.0.1:8118 all_proxy=socks5://127.0.0.1:8119
  export HTTPS_PROXY=http://127.0.0.1:8118 HTTP_PROXY=http://127.0.0.1:8118 ALL_PROXY=socks5://127.0.0.1:8119
  # Proxies and VPNs | minikube
  # https://minikube.sigs.k8s.io/docs/handbook/vpn_and_proxy/
  export NO_PROXY=localhost,127.0.0.1,10.96.0.0/12,192.168.59.0/24,192.168.49.0/24,192.168.39.0/24
}
function proxy_off() {
  unset https_proxy http_proxy all_proxy
  unset HTTPS_PROXY HTTP_PROXY ALL_PROXY
}
